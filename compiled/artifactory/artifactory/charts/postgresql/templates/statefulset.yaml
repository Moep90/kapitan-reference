apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  annotations: null
  labels:
    app.kubernetes.io/instance: artifactory
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-9.3.4
  name: artifactory-postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: artifactory
      app.kubernetes.io/name: postgresql
      role: master
  serviceName: artifactory-postgresql-headless
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: artifactory
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-9.3.4
        role: master
      name: artifactory-postgresql
    spec:
      containers:
        - env:
            - name: BITNAMI_DEBUG
              value: 'false'
            - name: POSTGRESQL_PORT_NUMBER
              value: '5432'
            - name: POSTGRESQL_VOLUME_DIR
              value: /bitnami/postgresql
            - name: PGDATA
              value: /bitnami/postgresql/data
            - name: POSTGRES_USER
              value: artifactory
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: postgresql-password
                  name: artifactory-postgresql
            - name: POSTGRES_DB
              value: artifactory
            - name: POSTGRESQL_ENABLE_LDAP
              value: 'no'
            - name: POSTGRESQL_ENABLE_TLS
              value: 'no'
          image: docker.bintray.io/bitnami/postgresql:12.5.0-debian-10-r25
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "artifactory" -d "dbname=artifactory" -h 127.0.0.1
                  -p 5432
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: artifactory-postgresql
          ports:
            - containerPort: 5432
              name: tcp-postgresql
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - 'exec pg_isready -U "artifactory" -d "dbname=artifactory" -h 127.0.0.1
                  -p 5432

                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized
                  ]

                  '
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            runAsUser: 1001
          volumeMounts:
            - mountPath: /bitnami/postgresql/conf/conf.d/
              name: postgresql-extended-config
            - mountPath: /dev/shm
              name: dshm
            - mountPath: /bitnami/postgresql
              name: data
              subPath: null
      securityContext:
        fsGroup: 1001
      volumes:
        - configMap:
            name: artifactory-postgresql-extended-configuration
          name: postgresql-extended-config
        - emptyDir:
            medium: Memory
            sizeLimit: 1Gi
          name: dshm
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 50Gi
